@model TheHomeOfPartner.Models.Team
@{
    if (Session["UserName"] != null)
    {
        Layout = "~/Views/Shared/_Layout2.cshtml";
    }
    ViewBag.Title = "加入团队";
}
@section ScriptsHeader{
  @Styles.Render("~/Content/css")
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top:80px;">
        <h2 class="text-center">加入团队</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
                @Html.LabelFor(model => model.PName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.PName, new { htmlAttributes = new { @class = "form-control",@readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeamName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.TeamName, new { htmlAttributes = new { @class = "form-control", @placeholder = "团队名称", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TeamName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillsRequirement, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                @Html.Editor("SkillsRequirement", new { htmlAttributes = new { @class = "form-control", @Readonly= "readonly" } })
                @Html.ValidationMessageFor(model => model.SkillsRequirement, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("我的姓名", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.TeamMember, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.UserName, @Readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TeamMember, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                @Html.Editor("Contact", new { htmlAttributes = new { @class = "form-control",@Value= ViewBag.UserPhone, @Readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequiredNumber, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.RequiredNumber, new { htmlAttributes = new { @class = "form-control", @Readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.RequiredNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", @Readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @Readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-7 col-md-4">                
                <input type="submit" value="确认加入" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="col-md-offset-4 col-md-4">
    @Html.ActionLink("返回", "Index")
</div>
